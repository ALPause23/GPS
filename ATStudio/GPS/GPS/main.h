#ifndef MAIN_H_
	#define MAIN_H_
	
	
	
	#include <avr/io.h>
	#include <avr/interrupt.h>
	#include <util/delay.h>
	#include <stdio.h>
	#include <stdlib.h>
	#include <avr/pgmspace.h>
	
	#include "util/twi.h"
	





void SEND (unsigned char data);
void STOP ();
void START ();

unsigned char init[18]=
{
	0xA8,0x3F,0x00,0x40,0xA1,0xC8,0xDA,0x12,
	0x81,0x7F,0xA4,0xA6,0xD5,0x80,0x8D,0x14,0xAF,
};

#define		CL_HI		DDRC&=~(1<<0)	//PORTA.0 = SCL = SCK
#define		CL_LOW		DDRC|=(1<<0)	//PORTA.0
#define		DA_HI		DDRC&=~(1<<1)	//PORTA.1 = SDA
#define		DA_LOW		DDRC|=(1<<1)	//PORTA.1

#define		NAME		0b01111000		//����� ���������� �� ����
#define		DATS		0b01000000		//�������� ���������� ���� ������
#define		DAT			0b11000000		//�������� ������ ����� ������
#define		COM			0b10000000		//�������� ������ ����� �������

unsigned char ONE[8] = 
{
	// @0 '1' (4 pixels wide)
	0x60, //  ##
	0xE0, // ###
	0x60, //  ##
	0x60, //  ##
	0x60, //  ##
	0x60, //  ##
	0x60, //  ##
};
unsigned char TWO[8] = 
{
	// @0 '2' (6 pixels wide)
	0x70, //  ###
	0xD8, // ## ##
	0x18, //    ##
	0x30, //   ##
	0x60, //  ##
	0xC0, // ##
	0xF8, // #####
};
unsigned char THREE[8] = 
{
	// @0 '3' (6 pixels wide)
	0x70, //  ###
	0xD8, // ## ##
	0x18, //    ##
	0x30, //   ##
	0x18, //    ##
	0xD8, // ## ##
	0x70, //  ###
};
unsigned char FOUR[8] = 
{
	// @0 '4' (6 pixels wide)
	0x18, //    ##
	0x38, //   ###
	0x78, //  ####
	0xD8, // ## ##
	0xFC, // ######
	0x18, //    ##
	0x18, //    ##
};
unsigned char FIVE[8] =
{
	// @0 '5' (6 pixels wide)
	0xF8, // #####
	0xC0, // ##
	0xF0, // ####
	0x18, //    ##
	0x18, //    ##
	0xD8, // ## ##
	0x70, //  ###
}; 
unsigned char SIX[8] = 
{
	// @0 '6' (6 pixels wide)

	0x70, //  ###
	0xD8, // ## ##
	0xC0, // ##
	0xF0, // ####
	0xD8, // ## ##
	0xD8, // ## ##
	0x70, //  ###
};
unsigned char SEVEN[8] =
{
	// @0 '7' (6 pixels wide)
	0xF8, // #####
	0x18, //    ##
	0x30, //   ##
	0x30, //   ##
	0x30, //   ##
	0x60, //  ##
	0x60, //  ##
};
unsigned char EITHT[8] = 
{
	// @0 '8' (5 pixels wide)
	0x70, //  ###
	0xD8, // ## ##
	0xD8, // ## ##
	0x70, //  ###
	0xD8, // ## ##
	0xD8, // ## ##
	0x70, //  ###
};
unsigned char NINE[8] = 
{
	// @0 '9' (5 pixels wide)
	0x70, //  ###
	0xD8, // ## ##
	0xD8, // ## ##
	0x78, //  ####
	0x18, //    ##
	0xD8, // ## ##
	0x70, //  ###
};
unsigned char ZERO[8] = 
{
	// @0 '0' (6 pixels wide)
	0x70, //  ###
	0xD8, // ## ##
	0xD8, // ## ##
	0xD8, // ## ##
	0xD8, // ## ##
	0xD8, // ## ##
	0x70, //  ###
};

unsigned char Z[8] =
{
	0x78, //  ####
	0xCC, // ##  ##
	0xDC, // ## ###
	0xDC, // ## ###
	0xFC, // ######
	0xEC, // ### ##
	0xEC, // ### ##
	0xCC, // ##  ##
};
unsigned char Y[8] =
{
	// @9 '�' (7 pixels wide)
	0x00, //
	0xC6, // ##   ##
	0x6C, //  ## ##
	0x6C, //  ## ##
	0x38, //   ###
	0x38, //   ###
	0x30, //   ##
	0xE0, // ###
};
unsigned char X[8] =
{
	// @18 '�' (7 pixels wide)
	0x00, //
	0xC6, // ##   ##
	0x6C, //  ## ##
	0x38, //   ###
	0x38, //   ###
	0x38, //   ###
	0x6C, //  ## ##
	0xC6, // ##   ##
};

uint8_t serp [128] =
{
	// #########
	//  ##########
	//  ##############
	//       ##############
	//         #############
	//            #############
	//              ############
	//                 ############
	//                   ############
	//                     ############
	//                         ###########
	//                          ###########
	//                           ###########
	//                           ############
	//                             #############
	//                               ############
	//                                ############
	//                                 #############
	//                                   ############
	//                                    ############
	//                                     ############
	//                                      ###########
	//            ######################################
	//           ########################################
	//           ########################################
	//          ###########################################
	//          ###########################################
	//         ############################################
	//         #############################################
	//                     ############       ##############
	//                     ############       ##############
	//                    ############        ##############
	//                   ############        ##############
	//                   ############        ##############
	//                   ############        ##############
	//                  ###########         ###############
	//                  ###########         ##############
	//                  ###########        ##############
	//                 ############       ###############
	//             ###############     ################
	//            #####################################
	//            #####################################
	//            #####################################
	//            ##################################
	//            ################################
	//            ###############################
	//            #########################
	0x01, 0x03, 0x03, 0x03, 0x07, 0x06, 0x06, 0x0E, 0x1E, 0x1C, 0x1C, 0x3C, 0x78, 0x78, 0x70, 0xE0, 0xE0, 0xE0, 0xC0, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x83, 0x83, 0x87, 0x8F, 0x8F, 0xBF, 0xFE, 0xFC, 0xFC, 0xF8, 0xF0, 0xF0, 0xC0, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x0F, 0x0F, 0x0F, 0x0F, 0xCF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x38,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xF8, 0xF8, 0xF8, 0xFC, 0x7F, 0x7F, 0x7F, 0x7F, 0x3F, 0x1F, 0x1F, 0x07, 0x01, 0x00,
};


const uint8_t BGUIRlogo [256]=
{
	//                                ###  ###  ##  ###
	//                               ####   ### #### ###
	//                              ######   ##   ##   ##
	//                            ########    ##  ###  ##
	//                           #########    ##  ###  ##
	//                          ##########    ##  ###  ##
	//                         #### ######   ###  ###  ##
	//                        ####  ######  ###  ###  ###
	//                      #####   ######  ###  ### ###
	//                     ####     ###### ###  ##   ##
	//                    ####      ######
	//                   #####      ######
	//                  ####        ######
	//                #####         ######
	//               #####  ###     ######     #####     #####
	//             #####   ####     ######   ########   #######
	//            #####  ######     ######  #########  #########
	//           #####  #######     ###### #####################
	//          #####  ########     ##### ### ###### ### #######
	//         ####   #########     ####  ##  #####  ##  #######
	//        ####     # ######     ###   #   ####       #######
	//       ####        ######     ##        ###   #    #######
	//      ####         ######     #    #    #    ##    #######
	//     ####          ######         ##        ###    #######
	//   #####           ######    #  ####   #   ####    #######
	//  ####             ######   ## #####  ## ######    #######
	// ####              ######  ######### ### ########  ####### #
	// ###               ########## #################### ##########
	// ##                #########  ########  #########  #########
	// #                 ########   #######   ########   ########
	//                   ######     ######    #######    #######
	//                   #####      #####      #####      #####
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0x78, 0x38, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x01, 0x83, 0xC7, 0xFE, 0x78, 0x03, 0x83, 0xFE, 0xFE, 0x79, 0x03, 0x83, 0xFE, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xC0, 0xE0, 0xE0, 0x70, 0x78, 0x3C, 0x9E, 0xCF, 0xCF, 0xC3, 0x01, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x02, 0x03, 0x83, 0x81, 0xC0, 0xC2, 0xC3, 0xC1, 0xC1, 0x80, 0x03, 0x03, 0x01, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x07, 0x03, 0x09, 0x1C, 0x0E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x3F, 0x1F, 0x0F, 0x87, 0xC3, 0x1C, 0x0E, 0x07, 0x03, 0x7F, 0x3F, 0x3F, 0x1F, 0x8F, 0xC7, 0xE3, 0x0E, 0x0E, 0x07, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x3C, 0x1E, 0x0F, 0x07, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x38, 0x38, 0x1C, 0x0E, 0x07, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0x7F, 0x38, 0x1C, 0x0E, 0x0F, 0x78, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0x7F, 0x3C, 0x1C, 0x08, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x38, 0x1C, 0x08,
};

const uint8_t AVRlogo [512]=
{
	//                   ###########        ##############                         ############         ####################
	//                  ############        ###############                       ############        ########################
	//                 ##############        ##############                      ############        ############################
	//                ################        ##############                    #############       ##############################
	//               ##################        #############                   #############        ###############################
	//               ###################        #############                 #############        ##########          #############
	//              #####################        #############               #############        ###########          #############
	//             #######################        #############             #############        ############          #############
	//             ############ ###########        #############            ############         ###########           #############
	//            ###########    ##########        ##############          ############         ###########          ###############
	//           ############    ###########        ##############        #############        ###########           ##############
	//          ############      ###########        #############       #############        ####################################
	//         #############      ############       ##############     #############         ####################################
	//        #############       ############        ###############   #############        ##################################
	//        #############        ############        ##############  #############        ##################################
	//       ###################################        ###########################        ############  #############
	//       ####################################        #########################         ############  #############
	//      ######################################        #######################         ############    #############
	//     ########################################        #####################         ############     #############
	//    ##########################################       ####################         ############       #############
	//    ##########################################        ###################         ###########        #############
	//   #############                   ############        #################         ###########          #############
	//  #############                     ############        ################         ###########          ##############
	//  #############                      ############       ##############          ###########            ##############
	// #############                        ############       #############         ############             ##############
	// #############                         ###########        ###########         ############              ##############
	//                                                           #########
	//                                                           ########
	//                                                            #######
	//                                                              ####
	//                                                               ##
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xF8, 0xF0, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x03, 0x07, 0x0F, 0x1F, 0x3F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xF8, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3F, 0x1F, 0x0F, 0x03, 0x01, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF8, 0xFC, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFC, 0xFC, 0xFC, 0xF8, 0xF0, 0xE0, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9F, 0x87, 0x81, 0x81, 0x80, 0x81, 0x87, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xF8, 0xF0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x03, 0x07, 0x1F, 0x3F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0xF0, 0xE0, 0xE0, 0x80, 0x80, 0xC0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3F, 0x0F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF8, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0xFF, 0xFB, 0xF9, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xFE, 0x7E, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x3F, 0x1F, 0x1F, 0x1F, 0x07, 0x03, 0x00, 0x00, 0x00,
	0x00, 0xC0, 0xE0, 0xF8, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x3F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0xF8, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x01, 0x03, 0x0F, 0x1F, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x1F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF8, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x1F, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x01, 0x07, 0x1F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xF8, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x0F, 0x1F, 0x1F, 0x3F, 0x7F, 0x7F, 0x3F, 0x1F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

// Bitmap sizes for aVRlogo
//const uint_8 aVRlogoWidthPages = 16;
//const uint_8 aVRlogoHeightPixels = 31;



const uint8_t X1[128] =
{
	// ###########         ###########
	//  ##########         ##########
	//  ###########       ###########
	//   ##########      ###########
	//    ##########     ##########
	//    ###########   ###########
	//     ##########   ##########
	//      ########## ##########
	//       ###################
	//        #################
	//        ################
	//         ###############
	//          #############
	//          ############
	//           ###########
	//            #########
	//           ###########
	//          #############
	//          #############
	//         ###############
	//        #################
	//       ###################
	//       ###################
	//      ########## ##########
	//     ##########   ##########
	//    ##########    ###########
	//   ###########     ###########
	//   ##########       ##########
	//  ##########        ###########
	// ###########         ###########
	// ##########           ##########
	// ##########           ##########
	0x01, 0x07, 0x0F, 0x3F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xF0, 0xE0, 0x80, 0x00, 0x80, 0xE0, 0xF8, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3F, 0x0F, 0x07, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x0F, 0x3F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x1F, 0x0F, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0, 0xF8, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xF8, 0xF0, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xE0, 0xF0, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x0F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x03, 0x07, 0x1F, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0xF0, 0xE0,
};

#endif /* MAIN_H_ */

