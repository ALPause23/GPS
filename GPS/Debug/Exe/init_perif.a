;#include "init_perif.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;
;
;void init_periferal()
; 0001 0006 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 0007     // Timer/Counter 0 initialization
; 0001 0008     // Clock source: System Clock
; 0001 0009     // Clock value: Timer 0 Stopped
; 0001 000A     // Mode: Normal top=0xFF
; 0001 000B     // OC0 output: Disconnected
; 0001 000C     TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0001 000D     TCNT0=0x00;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0001 000E     OCR0=0x00;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0001 000F 
; 0001 0010     // Timer/Counter 1 initialization
; 0001 0011     // Clock source: System Clock
; 0001 0012     // Clock value: Timer1 Stopped
; 0001 0013     // Mode: Normal top=0xFFFF
; 0001 0014     // OC1A output: Disconnected
; 0001 0015     // OC1B output: Disconnected
; 0001 0016     // Noise Canceler: Off
; 0001 0017     // Input Capture on Falling Edge
; 0001 0018     // Timer1 Overflow Interrupt: Off
; 0001 0019     // Input Capture Interrupt: Off
; 0001 001A     // Compare A Match Interrupt: Off
; 0001 001B     // Compare B Match Interrupt: Off
; 0001 001C     TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0001 001D     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0001 001E     TCNT1H=0x00;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0001 001F     TCNT1L=0x00;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0001 0020     ICR1H=0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0001 0021     ICR1L=0x00;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0001 0022     OCR1AH=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0001 0023     OCR1AL=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0001 0024     OCR1BH=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0001 0025     OCR1BL=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0001 0026 
; 0001 0027     // Timer/Counter 2 initialization
; 0001 0028     // Clock source: System Clock
; 0001 0029     // Clock value: Timer2 Stopped
; 0001 002A     // Mode: Normal top=0xFF
; 0001 002B     // OC2 output: Disconnected
; 0001 002C     ASSR=0<<AS2;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0001 002D     TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0001 002E     TCNT2=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0001 002F     OCR2=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0001 0030 
; 0001 0031     // Timer(s)/Counter(s) Interrupt(s) initialization
; 0001 0032     TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0001 0033 
; 0001 0034     // External Interrupt(s) initialization
; 0001 0035     // INT0: On
; 0001 0036     // INT0 Mode: Low level
; 0001 0037     // INT1: On
; 0001 0038     // INT1 Mode: Low level
; 0001 0039     // INT2: Off
; 0001 003A     GICR|=(0<<INT1) | (0<<INT0) | (0<<INT2);
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0001 003B     MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0001 003C     MCUCSR=(0<<ISC2);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0001 003D     GIFR=(0<<INTF1) | (0<<INTF0) | (0<<INTF2);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0001 003E 
; 0001 003F     // USART initialization
; 0001 0040     // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0001 0041     // USART Receiver: On
; 0001 0042     // USART Transmitter: Off
; 0001 0043     // USART Mode: Asynchronous
; 0001 0044     // USART Baud Rate: 9600
; 0001 0045    UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0001 0046     UCSRB=(1<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0001 0047     UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0001 0048     UBRRH=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0001 0049     UBRRL=0x33;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0001 004A 
; 0001 004B //    UBRRH = (unsigned char)(MYUBRR>>8);
; 0001 004C //    UBRRL = (unsigned char)(MYUBRR);
; 0001 004D //    UCSRA = 0;
; 0001 004E //    /* Enable receiver and transmitter */
; 0001 004F //    UCSRB = (1<<RXEN)|(1<<TXEN)|(1<<RXCIE);
; 0001 0050 //    /* Set frame format: 8data, 2stop bit */
; 0001 0051 //    UCSRC = (1<<URSEL)|(1<<USBS)|(3<<UCSZ0);
; 0001 0052 
; 0001 0053     // Analog Comparator initialization
; 0001 0054     // Analog Comparator: Off
; 0001 0055     // The Analog Comparator's positive input is
; 0001 0056     // connected to the AIN0 pin
; 0001 0057     // The Analog Comparator's negative input is
; 0001 0058     // connected to the AIN1 pin
; 0001 0059     ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0001 005A     SFIOR=(0<<ACME);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0001 005B 
; 0001 005C     // ADC initialization
; 0001 005D     // ADC disabled
; 0001 005E     ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0001 005F 
; 0001 0060     // SPI initialization
; 0001 0061     // SPI Type: Master
; 0001 0062     // SPI Clock Rate: 2000,000 kHz
; 0001 0063     // SPI Clock Phase: Cycle Start
; 0001 0064     // SPI Clock Polarity: Low
; 0001 0065     // SPI Data Order: MSB First
; 0001 0066     SPCR=(0<<SPIE) | (1<<SPE) | (0<<DORD) | (1<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0001 0067     SPSR=(0<<SPI2X);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0001 0068 
; 0001 0069     // TWI initialization
; 0001 006A     // TWI disabled
; 0001 006B     TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0001 006C }
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;
;//  Получение байта
